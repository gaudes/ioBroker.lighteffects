{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.1.0\n */\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport * as utils from \"@iobroker/adapter-core\";\nimport { GlobalHelper } from \"./modules/global-helper\";\n\nlet Helper: GlobalHelper;\n\nenum StopLightBy {\n\t\"StopEffect\",\n\t\"PowerOff\",\n\t\"SwitchEffect\",\n}\n\ninterface Light {\n\tname: string;\n\tenabled: boolean;\n\tstate: string;\n\tbrightness: string;\n\tcolor: string;\n\tcolortemp: string;\n\ttransition: string;\n\tdefaulteffect: string;\n\tdisabling: string;\n\tverified: boolean;\n\tactive: boolean;\n\tcurrenteffect: string;\n\teffectPrevious: string | null;\n\tcurrentstate: boolean | null;\n\tcurrentbrightness: number | null;\n\tcurrentcolor: string | null;\n\tcurrentcolortemp: number | null;\n\tcurrentsetting: string;\n\tcurrenttransition: number | null;\n\tstoplightby: StopLightBy | null;\n}\n\nlet Lights: Light[];\n\nconst MsgErrUnknown = \"Unknown Error\";\nconst EffectTimeout: any = null;\n// let EffectResetTimeout: any = null;\n\nclass Lighteffects extends utils.Adapter {\n\t//#region Constructor\n\tpublic constructor(options: Partial<utils.AdapterOptions> = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\tname: \"lighteffects\",\n\t\t});\n\t\tthis.on(\"ready\", this.onReady.bind(this));\n\t\tthis.on(\"stateChange\", this.onStateChange.bind(this));\n\t\tthis.on(\"unload\", this.onUnload.bind(this));\n\t}\n\t//#endregion\n\n\t//#region Base Functions of Adapter\n\t//#region onReady\n\tprivate async onReady(): Promise<void> {\n\t\t// Init Helper\n\t\tHelper = new GlobalHelper(this);\n\t\t// Init variables\n\t\tlet oExistingObjects: Record<string, ioBroker.AdapterScopedObject> | null = null;\n\t\ttry {\n\t\t\t// Adapter starting\n\t\t\tHelper.ReportingInfo(\"Info\", \"Adapter\", \"Adapter starting\");\n\t\t\tHelper.ReportingInfo(\"Debug\", \"Adapter\", \"Current config: \" + JSON.stringify(this.config));\n\t\t\tLights = [];\n\t\t\t// Get existing states\n\t\t\toExistingObjects = await this.getAdapterObjectsAsync();\n\t\t\tHelper.ReportingInfo(\"Debug\", \"Adapter\", \"Existing objects: \" + JSON.stringify(oExistingObjects));\n\t\t} catch (err) {\n\t\t\tHelper.ReportingError(err as Error, MsgErrUnknown, \"onReady/Start\");\n\t\t}\n\t\t//#region Check config, create and cleanup states\n\t\tif (this.config.lights.length > 0) {\n\t\t\tfor (const cLight of this.config.lights) {\n\t\t\t\ttry {\n\t\t\t\t\t// Creating internal object from config\n\t\t\t\t\tLights.push({\n\t\t\t\t\t\tname: cLight.name,\n\t\t\t\t\t\tenabled: cLight.enabled,\n\t\t\t\t\t\tstate: cLight.state,\n\t\t\t\t\t\tbrightness: cLight.brightness,\n\t\t\t\t\t\tcolor: cLight.color,\n\t\t\t\t\t\tcolortemp: cLight.colortemp,\n\t\t\t\t\t\ttransition: cLight.transition,\n\t\t\t\t\t\tdefaulteffect: cLight.effect,\n\t\t\t\t\t\tdisabling: cLight.disabling,\n\t\t\t\t\t\tverified: false,\n\t\t\t\t\t\tactive: false,\n\t\t\t\t\t\tcurrenteffect: cLight.effect,\n\t\t\t\t\t\teffectPrevious: null,\n\t\t\t\t\t\tcurrentstate: null,\n\t\t\t\t\t\tcurrentbrightness: null,\n\t\t\t\t\t\tcurrentcolor: null,\n\t\t\t\t\t\tcurrentcolortemp: null,\n\t\t\t\t\t\tcurrentsetting: \"color\",\n\t\t\t\t\t\tcurrenttransition: null,\n\t\t\t\t\t\tstoplightby: null,\n\t\t\t\t\t});\n\t\t\t\t} catch (err) {\n\t\t\t\t\tHelper.ReportingError(err as Error, MsgErrUnknown, \"onReady/LightCreate\");\n\t\t\t\t}\n\n\t\t\t\t//#region Verify config element\n\t\t\t\ttry {\n\t\t\t\t\tif (cLight.name === \"\" || cLight.name === null) {\n\t\t\t\t\t\tHelper.ReportingInfo(\"Warn\", \"Adapter\", \"Config contains light without name\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (cLight.state === \"\" || cLight.state === null) {\n\t\t\t\t\t\tHelper.ReportingInfo(\"Warn\", \"Adapter\", `Config light ${cLight.name} has no object for state`);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ((await this.getForeignObjectAsync(cLight.state)) === null) {\n\t\t\t\t\t\t\tHelper.ReportingInfo(\n\t\t\t\t\t\t\t\t\"Warn\",\n\t\t\t\t\t\t\t\t\"Adapter\",\n\t\t\t\t\t\t\t\t`Config light ${cLight.name} has not existing object for state`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (cLight.brightness === \"\" || cLight.brightness === null) {\n\t\t\t\t\t\tHelper.ReportingInfo(\n\t\t\t\t\t\t\t\"Warn\",\n\t\t\t\t\t\t\t\"Adapter\",\n\t\t\t\t\t\t\t`Config light ${cLight.name} has no object for brightness`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ((await this.getForeignObjectAsync(cLight.brightness)) === null) {\n\t\t\t\t\t\t\tHelper.ReportingInfo(\n\t\t\t\t\t\t\t\t\"Warn\",\n\t\t\t\t\t\t\t\t\"Adapter\",\n\t\t\t\t\t\t\t\t`Config light ${cLight.name} has not existing object for brightness`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (cLight.color === \"\" || cLight.color === null) {\n\t\t\t\t\t\tHelper.ReportingInfo(\"Warn\", \"Adapter\", `Config light ${cLight.name} has no object for color`);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ((await this.getForeignObjectAsync(cLight.color)) === null) {\n\t\t\t\t\t\t\tHelper.ReportingInfo(\n\t\t\t\t\t\t\t\t\"Warn\",\n\t\t\t\t\t\t\t\t\"Adapter\",\n\t\t\t\t\t\t\t\t`Config light ${cLight.name} has not existing object for color`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (cLight.transition === \"\" || cLight.transition === null) {\n\t\t\t\t\t\tHelper.ReportingInfo(\n\t\t\t\t\t\t\t\"Warn\",\n\t\t\t\t\t\t\t\"Adapter\",\n\t\t\t\t\t\t\t`Config light ${cLight.name} has no object for transition`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ((await this.getForeignObjectAsync(cLight.transition)) === null) {\n\t\t\t\t\t\t\tHelper.ReportingInfo(\n\t\t\t\t\t\t\t\t\"Warn\",\n\t\t\t\t\t\t\t\t\"Adapter\",\n\t\t\t\t\t\t\t\t`Config light ${cLight.name} has not existing object for transition`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Setting verified of internal object\n\t\t\t\t\tLights[Lights.findIndex((obj) => obj.name === cLight.name)].verified = true;\n\t\t\t\t} catch (err) {\n\t\t\t\t\tHelper.ReportingError(err as Error, MsgErrUnknown, \"onReady/LightVerify\");\n\t\t\t\t}\n\t\t\t\t//#endregion\n\n\t\t\t\t//#region Creating objects when enabled\n\t\t\t\ttry {\n\t\t\t\t\tif (cLight.enabled === true) {\n\t\t\t\t\t\t// Checking or createing device\n\t\t\t\t\t\tif (oExistingObjects![this.name + \".\" + this.instance + \".\" + cLight.name]) {\n\t\t\t\t\t\t\t// Already exists\n\t\t\t\t\t\t\tdelete oExistingObjects![this.name + \".\" + this.instance + \".\" + cLight.name];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Create device\n\t\t\t\t\t\t\tawait this.createDeviceAsync(cLight.name);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Checking or createing effect\n\t\t\t\t\t\tif (oExistingObjects![this.name + \".\" + this.instance + \".\" + cLight.name + \".\" + \"effect\"]) {\n\t\t\t\t\t\t\t// Already exists\n\t\t\t\t\t\t\tdelete oExistingObjects![\n\t\t\t\t\t\t\t\tthis.name + \".\" + this.instance + \".\" + cLight.name + \".\" + \"effect\"\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Create State\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(cLight.name + \".\" + \"effect\", {\n\t\t\t\t\t\t\t\ttype: \"state\",\n\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\tname: \"effect\",\n\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\trole: \"state\",\n\t\t\t\t\t\t\t\t\tstates: {\n\t\t\t\t\t\t\t\t\t\tcolor: \"color\",\n\t\t\t\t\t\t\t\t\t\tcandle: \"candle\",\n\t\t\t\t\t\t\t\t\t\tnotifyAlarm: \"notifyAlarm\",\n\t\t\t\t\t\t\t\t\t\tnotifyWarn: \"notifyWarn\",\n\t\t\t\t\t\t\t\t\t\tnotifyInfo: \"notifyInfo\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tread: true,\n\t\t\t\t\t\t\t\t\twrite: true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Checking or createing state\n\t\t\t\t\t\tif (oExistingObjects![this.name + \".\" + this.instance + \".\" + cLight.name + \".\" + \"state\"]) {\n\t\t\t\t\t\t\t// Already exists\n\t\t\t\t\t\t\tdelete oExistingObjects![\n\t\t\t\t\t\t\t\tthis.name + \".\" + this.instance + \".\" + cLight.name + \".\" + \"state\"\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Create State\n\t\t\t\t\t\t\tawait this.setObjectNotExistsAsync(cLight.name + \".\" + \"state\", {\n\t\t\t\t\t\t\t\ttype: \"state\",\n\t\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\t\tname: \"state\",\n\t\t\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\t\t\trole: \"state\",\n\t\t\t\t\t\t\t\t\tread: true,\n\t\t\t\t\t\t\t\t\twrite: true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\tHelper.ReportingError(err as Error, MsgErrUnknown, \"onReady/LightCreateObjects\");\n\t\t\t\t}\n\t\t\t\t//#endregion\n\n\t\t\t\t//#region Cleanup state and subscribe object\n\t\t\t\ttry {\n\t\t\t\t\tawait this.setStateAsync(cLight.name + \".\" + \"state\", false);\n\t\t\t\t\tawait this.setStateAsync(cLight.name + \".\" + \"effect\", cLight.effect);\n\t\t\t\t\tthis.subscribeStates(cLight.name + \".\" + \"state\");\n\t\t\t\t\tthis.subscribeStates(cLight.name + \".\" + \"effect\");\n\t\t\t\t\t// Subscribe foreign state for poweroff events\n\t\t\t\t\tthis.subscribeForeignStates(cLight.state);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tHelper.ReportingError(err as Error, MsgErrUnknown, \"onReady/LightCleanupSubscribe\");\n\t\t\t\t}\n\t\t\t\t//#endregion\n\t\t\t}\n\n\t\t\tHelper.ReportingInfo(\"Debug\", \"Adapter\", `Internal Lights object: ${JSON.stringify(Lights)}`);\n\n\t\t\t//#region Cleaning up reminding objects\n\t\t\ttry {\n\t\t\t\tHelper.ReportingInfo(\"Debug\", \"Adapter\", `Objects to cleanup: ${JSON.stringify(oExistingObjects)}`);\n\t\t\t\tObject.entries(oExistingObjects!).map(([key, _value]) => {\n\t\t\t\t\tHelper.ReportingInfo(\"Debug\", \"Adapter\", `Deleting unneeded object ${key}`);\n\t\t\t\t\tthis.delForeignObjectAsync(key);\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\tHelper.ReportingError(err as Error, MsgErrUnknown, \"onReady/Cleanup\");\n\t\t\t}\n\t\t\t//#endregion\n\t\t}\n\t\t//#endregion\n\t}\n\t//#endregion\n\n\t//#region onUnload\n\tprivate onUnload(callback: () => void): void {\n\t\ttry {\n\t\t\tfor (const cLight of Lights) {\n\t\t\t\tif (cLight.active === true) {\n\t\t\t\t\tLights[Lights.findIndex((obj) => obj.name == cLight.name)].active = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.setTimeout(() => {\n\t\t\t\tthis.clearTimeout(EffectTimeout);\n\t\t\t\t//this.clearTimeout(EffectResetTimeout);\n\t\t\t\tcallback();\n\t\t\t}, 1500);\n\t\t} catch (e) {\n\t\t\tcallback();\n\t\t}\n\t}\n\t//#endregion\n\n\t//#region onStateChange\n\tprivate onStateChange(id: string, state: ioBroker.State | null | undefined): void {\n\t\ttry {\n\t\t\tif (state) {\n\t\t\t\tHelper.ReportingInfo(\n\t\t\t\t\t\"Debug\",\n\t\t\t\t\t\"onStateChange\",\n\t\t\t\t\t`state ${id} changed: ${state.val} (ack = ${state.ack})`,\n\t\t\t\t);\n\t\t\t\t// Own states\n\t\t\t\tif (id.startsWith(this.name + \".\" + this.instance)) {\n\t\t\t\t\t// Get Name of Config Light\n\t\t\t\t\tconst LightName = id.split(\".\")[2];\n\t\t\t\t\t// Get object name for light\n\t\t\t\t\tconst ChangedProperty = id.split(\".\")[3];\n\t\t\t\t\t// Read internal light to variable\n\t\t\t\t\tconst Light = Lights[Lights.findIndex((obj) => obj.name == LightName)];\n\t\t\t\t\tHelper.ReportingInfo(\"Debug\", \"onStateChange\", `CurrentLight: ${JSON.stringify(Light)}`);\n\t\t\t\t\t// Effect changed\n\t\t\t\t\tif (\n\t\t\t\t\t\tChangedProperty === \"effect\" &&\n\t\t\t\t\t\tstate.val !== null &&\n\t\t\t\t\t\tstate.val !== \"undefined\" &&\n\t\t\t\t\t\ttypeof state.val === \"string\"\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (Light.active === true) {\n\t\t\t\t\t\t\t// Save previous effect (Then don't save current-values and used after notify)\n\t\t\t\t\t\t\tLights[Lights.findIndex((obj) => obj.name == LightName)].effectPrevious =\n\t\t\t\t\t\t\t\tLight.currenteffect;\n\t\t\t\t\t\t\tLights[Lights.findIndex((obj) => obj.name == LightName)].currenteffect = state.val;\n\t\t\t\t\t\t\tthis.effectRun(Light);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tLights[Lights.findIndex((obj) => obj.name == LightName)].currenteffect = state.val;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (ChangedProperty === \"state\") {\n\t\t\t\t\t\t// Enable effect\n\t\t\t\t\t\tif (state.val === true) {\n\t\t\t\t\t\t\tLights[Lights.findIndex((obj) => obj.name == LightName)].stoplightby = null;\n\t\t\t\t\t\t\tthis.effectRun(Light);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tLights[Lights.findIndex((obj) => obj.name == LightName)].stoplightby =\n\t\t\t\t\t\t\t\tStopLightBy.StopEffect;\n\t\t\t\t\t\t\tLights[Lights.findIndex((obj) => obj.name == LightName)].effectPrevious = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Foreign state, check if powered off and effect running\n\t\t\t\t\tif (state.val === false && Lights[Lights.findIndex((obj) => obj.state == id)].active === true) {\n\t\t\t\t\t\tLights[Lights.findIndex((obj) => obj.state == id)].stoplightby = StopLightBy.PowerOff;\n\t\t\t\t\t\tLights[Lights.findIndex((obj) => obj.state == id)].effectPrevious = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tHelper.ReportingInfo(\"Debug\", \"Adapter\", `state ${id} deleted`);\n\t\t\t\t// Deleted states by user ? Restart adapter ?\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tHelper.ReportingError(err as Error, MsgErrUnknown, \"onStateChange\");\n\t\t}\n\t}\n\t//#endregion\n\t//#endregion\n\n\t//#region Effect Functions\n\n\t//#region Base Effect Function\n\tprivate async effectRun(Light: Light): Promise<void> {\n\t\tHelper.ReportingInfo(\"Debug\", \"effectRun\", `Run effect for ${Light.name} with ${JSON.stringify(Light)}`);\n\t\t// Store current settings if no effect running\n\t\tif (Light.effectPrevious === null) {\n\t\t\tHelper.ReportingInfo(\"Debug\", \"effectRun\", `Save current values for ${Light.name}`);\n\t\t\tawait this.saveCurrentValues(Light);\n\t\t}\n\t\t// When effect already running\n\t\tif (Light.active === true && Light.effectPrevious !== null) {\n\t\t\tHelper.ReportingInfo(\"Debug\", \"effectRun\", `Stop current effect for ${Light.name}`);\n\t\t\t// Stop current effect\n\t\t\tLight.stoplightby = StopLightBy.SwitchEffect;\n\t\t\t// Sleep 1000\n\t\t\tawait new Promise((EffectTimeout) => setTimeout(EffectTimeout, 1100));\n\t\t\tLight.stoplightby = null;\n\t\t}\n\t\t// Set internal Light active\n\t\tLights[Lights.findIndex((obj) => obj.name === Light.name)].active = true;\n\t\t// Execute effect\n\t\tswitch (Light.currenteffect) {\n\t\t\tcase \"color\":\n\t\t\t\tthis.effectColor(Light);\n\t\t\t\tbreak;\n\t\t\tcase \"candle\":\n\t\t\t\tthis.effectCandle(Light);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.effectNotify(\n\t\t\t\t\tLight,\n\t\t\t\t\tthis.config.notification[\n\t\t\t\t\t\tthis.config.notification.findIndex((obj) => obj.typeInternal == Light.currenteffect)\n\t\t\t\t\t].color,\n\t\t\t\t\tthis.config.notification[\n\t\t\t\t\t\tthis.config.notification.findIndex((obj) => obj.typeInternal == Light.currenteffect)\n\t\t\t\t\t].brightLow,\n\t\t\t\t\tthis.config.notification[\n\t\t\t\t\t\tthis.config.notification.findIndex((obj) => obj.typeInternal == Light.currenteffect)\n\t\t\t\t\t].brightHigh,\n\t\t\t\t\tthis.config.notification[\n\t\t\t\t\t\tthis.config.notification.findIndex((obj) => obj.typeInternal == Light.currenteffect)\n\t\t\t\t\t].pulse,\n\t\t\t\t);\n\t\t}\n\t}\n\n\tprivate async effectStop(Light: Light): Promise<void> {\n\t\tHelper.ReportingInfo(\"Debug\", \"effectStop\", `Stop effect for ${Light.name} with ${JSON.stringify(Light)}`);\n\t\tLight.active = false;\n\t\tswitch (Light.stoplightby) {\n\t\t\t// Stop by Poweroff: When Reset or PowerOffRestore Reset and Poweroff\n\t\t\tcase StopLightBy.PowerOff:\n\t\t\t\tif (Light.disabling === \"Reset\" || Light.disabling === \"PowerOffReset\") {\n\t\t\t\t\tHelper.ReportingInfo(\"Debug\", \"effectStop\", `Stopped by PowerOff  event for ${Light.name}`);\n\t\t\t\t\tawait this.restoreCurrentValues(Light);\n\t\t\t\t\tawait this.setForeignStateAsync(Light.state, false);\n\t\t\t\t\tawait this.setStateAsync(Light.name + \".\" + \"state\", false);\n\t\t\t\t\tawait this.setStateAsync(Light.name + \".\" + \"effect\", Light.defaulteffect);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t// Stop by StopEffect\n\t\t\tcase StopLightBy.StopEffect:\n\t\t\t\tswitch (Light.disabling) {\n\t\t\t\t\tcase \"Reset\": {\n\t\t\t\t\t\tawait this.restoreCurrentValues(Light);\n\t\t\t\t\t\tawait this.setStateAsync(Light.name + \".\" + \"state\", false);\n\t\t\t\t\t\tawait this.setStateAsync(Light.name + \".\" + \"effect\", Light.defaulteffect);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase \"PowerOffRestore\": {\n\t\t\t\t\t\tawait this.restoreCurrentValues(Light);\n\t\t\t\t\t\tawait this.setForeignStateAsync(Light.state, false);\n\t\t\t\t\t\tawait this.setStateAsync(Light.name + \".\" + \"state\", false);\n\t\t\t\t\t\tawait this.setStateAsync(Light.name + \".\" + \"effect\", Light.defaulteffect);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tawait this.setStateAsync(Light.name + \".\" + \"state\", false);\n\t\t\t\t\t\tawait this.setStateAsync(Light.name + \".\" + \"effect\", Light.defaulteffect);\n\t\t\t\t\t\tawait this.setForeignStateAsync(Light.state, false);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t// Do nothing, just stop\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tLights[Lights.findIndex((obj) => obj.name === Light.name)].stoplightby = null;\n\t\tLights[Lights.findIndex((obj) => obj.name === Light.name)].active = false;\n\t}\n\n\t//#region Effect Notify\n\t// Simple effect: Set color, switch brightness from 1 to 100 three times, handle poweroff behaviour\n\tprivate async effectNotify(\n\t\tLight: Light,\n\t\tColor: string,\n\t\tBrightLow: number,\n\t\tBrightHigh: number,\n\t\tPulse: number,\n\t): Promise<void> {\n\t\ttry {\n\t\t\tHelper.ReportingInfo(\n\t\t\t\t\"Debug\",\n\t\t\t\t\"effectNotify\",\n\t\t\t\t`Effect notify for ${Light.name} with ${JSON.stringify(Light)}`,\n\t\t\t);\n\t\t\t// Set transition time to 0\n\t\t\tawait this.setForeignStateAsync(Light.transition, 0);\n\t\t\t// Set color\n\t\t\tawait this.setForeignStateAsync(Light.color, Color);\n\t\t\t// Power on if neccessary\n\t\t\tif ((await this.getForeignStateAsync(Light.state))?.val !== true) {\n\t\t\t\tawait this.setForeignStateAsync(Light.state, true);\n\t\t\t}\n\t\t\tfor (let i = 0; i < Pulse; i++) {\n\t\t\t\t// Set brightness to 100%\n\t\t\t\tawait this.setForeignStateAsync(Light.brightness, BrightHigh);\n\t\t\t\t// Sleep 1s\n\t\t\t\tawait new Promise((f) => setTimeout(f, 1000));\n\t\t\t\t// Set brightness to 1%\n\t\t\t\tawait this.setForeignStateAsync(Light.brightness, BrightLow);\n\t\t\t\t// Sleep 1s\n\t\t\t\tawait new Promise((f) => setTimeout(f, 1000));\n\t\t\t}\n\t\t\t// No previous effect\n\t\t\tif (Light.effectPrevious === null) {\n\t\t\t\tLight.stoplightby = StopLightBy.StopEffect;\n\t\t\t\tthis.effectStop(Light);\n\t\t\t} else {\n\t\t\t\tconst effectPrevious = Light.effectPrevious;\n\t\t\t\tLight.effectPrevious = null;\n\t\t\t\tawait this.setStateAsync(Light.name + \".\" + \"effect\", effectPrevious);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tHelper.ReportingError(err as Error, MsgErrUnknown, \"effectNotify\");\n\t\t}\n\t}\n\t//#endregion\n\n\t//#region Effect Color\n\t// Effect: Set color as defined in an infinit loop, handle poweroff behaviour\n\tprivate async effectColor(Light: Light): Promise<void> {\n\t\ttry {\n\t\t\tHelper.ReportingInfo(\n\t\t\t\t\"Debug\",\n\t\t\t\t\"effectColor\",\n\t\t\t\t`Effect color for ${Light.name} with ${JSON.stringify(Light)}`,\n\t\t\t);\n\t\t\t// Set color to first color\n\t\t\tawait this.setForeignStateAsync(Light.color, this.config.colorfulColors[0].color);\n\t\t\t// Power on if neccessary\n\t\t\tif ((await this.getForeignStateAsync(Light.state))?.val !== true) {\n\t\t\t\tawait this.setForeignStateAsync(Light.state, true);\n\t\t\t}\n\t\t\t// Set transition time to desired value\n\t\t\tawait this.setForeignStateAsync(Light.transition, this.config.colorfulTransition);\n\t\t\twhile (Light.stoplightby === null) {\n\t\t\t\tfor (let i = 1; i < this.config.colorfulColors.length; i++) {\n\t\t\t\t\tfor (let j = 1; j < this.config.colorfulDuration; j++) {\n\t\t\t\t\t\tif (Light.stoplightby === null) {\n\t\t\t\t\t\t\tawait new Promise((EffectTimeout) => setTimeout(EffectTimeout, 1000));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (Light.stoplightby === null) {\n\t\t\t\t\t\tawait this.setForeignStateAsync(Light.color, this.config.colorfulColors[i].color);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (Light.stoplightby === null) {\n\t\t\t\t\tawait this.setForeignStateAsync(Light.color, this.config.colorfulColors[0].color);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.effectStop(Lights[Lights.findIndex((obj) => obj.name === Light.name)]);\n\t\t} catch (err) {\n\t\t\tHelper.ReportingError(err as Error, MsgErrUnknown, \"effectColor\");\n\t\t}\n\t}\n\t//#endregion\n\n\t//#region Effect Candle\n\t// Effect: Set candle colors as defined in an infinit loop, handle poweroff behaviour\n\tprivate async effectCandle(Light: Light): Promise<void> {\n\t\tfunction getRandomColor(): string {\n\t\t\treturn \"#\" + ((1 << 24) + (255 << 16) + (Math.floor(Math.random() * 201) << 8) + 0).toString(16).slice(1);\n\t\t}\n\t\ttry {\n\t\t\tHelper.ReportingInfo(\n\t\t\t\t\"Debug\",\n\t\t\t\t\"effectCandle\",\n\t\t\t\t`Effect candle for ${Light.name} with ${JSON.stringify(Light)}`,\n\t\t\t);\n\t\t\t// Set transition time to 1\n\t\t\tawait this.setForeignStateAsync(Light.transition, 1);\n\t\t\t// Set color to initial color\n\t\t\tawait this.setForeignStateAsync(Light.color, getRandomColor());\n\t\t\t// Power on if neccessary\n\t\t\tif ((await this.getForeignStateAsync(Light.state))?.val !== true) {\n\t\t\t\tawait this.setForeignStateAsync(Light.state, true);\n\t\t\t}\n\t\t\twhile (Light.stoplightby === null) {\n\t\t\t\tawait new Promise((EffectTimeout) => {\n\t\t\t\t\treturn setTimeout(EffectTimeout, Math.floor(Math.random() * (1000 - 200 + 1) + 200) + 1000);\n\t\t\t\t});\n\t\t\t\tif (Light.stoplightby === null) {\n\t\t\t\t\tawait this.setForeignStateAsync(Light.color, getRandomColor());\n\t\t\t\t\tlet CurrBright = 100;\n\t\t\t\t\tif (typeof Light.currentbrightness === \"number\") {\n\t\t\t\t\t\tCurrBright = Light.currentbrightness;\n\t\t\t\t\t}\n\t\t\t\t\tawait this.setForeignStateAsync(\n\t\t\t\t\t\tLight.brightness,\n\t\t\t\t\t\tMath.floor(Math.random() * (CurrBright - CurrBright / 2 + 1) + CurrBright / 2),\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.effectStop(Lights[Lights.findIndex((obj) => obj.name === Light.name)]);\n\t\t} catch (err) {\n\t\t\tHelper.ReportingError(err as Error, MsgErrUnknown, \"effectCandle\");\n\t\t}\n\t}\n\t//#endregion\n\n\t//#region saveCurrentValues\n\t// Save current settings of light\n\tprivate async saveCurrentValues(Light: Light): Promise<void> {\n\t\ttry {\n\t\t\tHelper.ReportingInfo(\"Debug\", \"saveCurrentValues\", `Save current values for ${Light.name}`);\n\t\t\t// Save state\n\t\t\tconst CurrState = await this.getForeignStateAsync(Light.state);\n\t\t\tif (CurrState!.val === true) {\n\t\t\t\tLight.currentstate = true;\n\t\t\t} else {\n\t\t\t\tLight.currentstate = false;\n\t\t\t}\n\t\t\t// Save brightness\n\t\t\tconst CurrBrightness = await this.getForeignStateAsync(Light.brightness);\n\t\t\tif (\n\t\t\t\tCurrBrightness!.val !== null &&\n\t\t\t\tCurrBrightness!.val !== \"undefined\" &&\n\t\t\t\ttypeof CurrBrightness!.val === \"number\" &&\n\t\t\t\tCurrBrightness!.val >= 0\n\t\t\t) {\n\t\t\t\tLight.currentbrightness = CurrBrightness!.val;\n\t\t\t} else {\n\t\t\t\tLight.currentbrightness = 100;\n\t\t\t}\n\t\t\t// Save color\n\t\t\tconst CurrColor = await this.getForeignStateAsync(Light.color);\n\t\t\tlet CurrColorTime = 0;\n\t\t\tif (CurrColor!.val !== null && CurrColor!.val !== \"undefined\" && typeof CurrColor!.val === \"string\") {\n\t\t\t\tCurrColorTime = CurrColor?.ts || 0;\n\t\t\t\tLight.currentcolor = CurrColor!.val;\n\t\t\t} else {\n\t\t\t\tLight.currentcolor = \"white\";\n\t\t\t}\n\t\t\t// Save colortemp (if defined)\n\t\t\tif (Light.colortemp !== null && Light.colortemp !== \"\") {\n\t\t\t\tconst CurrColorTemp = await this.getForeignStateAsync(Light.colortemp);\n\t\t\t\tif (\n\t\t\t\t\tCurrColorTemp!.val !== null &&\n\t\t\t\t\tCurrColorTemp!.val !== \"undefined\" &&\n\t\t\t\t\ttypeof CurrColorTemp!.val === \"number\"\n\t\t\t\t) {\n\t\t\t\t\tLight.currentcolortemp = CurrColorTemp!.val;\n\t\t\t\t\tif (typeof CurrColorTemp?.ts === \"number\" && CurrColorTemp?.ts > CurrColorTime) {\n\t\t\t\t\t\tLight.currentsetting = \"colortemp\";\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tLight.currentcolortemp = 350;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Save transition time\n\t\t\tconst CurrTransition = await this.getForeignStateAsync(Light.transition);\n\t\t\tif (\n\t\t\t\tCurrTransition!.val !== null &&\n\t\t\t\tCurrTransition!.val !== \"undefined\" &&\n\t\t\t\ttypeof CurrTransition!.val === \"number\" &&\n\t\t\t\tCurrTransition!.val >= 0\n\t\t\t) {\n\t\t\t\tLight.currenttransition = CurrTransition!.val;\n\t\t\t} else {\n\t\t\t\tLight.currenttransition = 0;\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tHelper.ReportingError(err as Error, MsgErrUnknown, \"saveCurrentValues\");\n\t\t}\n\t}\n\t//#endregion\n\n\t//#region restoreCurrentValues\n\t// Save current settings of light\n\tprivate async restoreCurrentValues(Light: Light): Promise<void> {\n\t\ttry {\n\t\t\tHelper.ReportingInfo(\n\t\t\t\t\"Debug\",\n\t\t\t\t\"restoreCurrentValues\",\n\t\t\t\t`Restore current values for ${Light.name} to brightness ${Light.currentbrightness}, color ${Light.currentcolor}, colortemp ${Light.currentcolortemp}, setting ${Light.currentsetting}, Transition ${Light.currenttransition}, State ${Light.currentstate}`,\n\t\t\t);\n\t\t\tawait this.setForeignStateAsync(Light.brightness, Light.currentbrightness);\n\t\t\tawait this.setForeignStateAsync(Light.state, Light.currentstate);\n\t\t\tif (Light.currentsetting === \"color\") {\n\t\t\t\tawait this.setForeignStateAsync(Light.color, Light.currentcolor);\n\t\t\t} else {\n\t\t\t\tawait this.setForeignStateAsync(Light.colortemp, Light.currentcolortemp);\n\t\t\t}\n\t\t\tawait this.setForeignStateAsync(Light.transition, Light.currenttransition);\n\t\t} catch (err) {\n\t\t\tHelper.ReportingError(err as Error, MsgErrUnknown, \"restoreCurrentValues\");\n\t\t}\n\t}\n\t//#endregion\n\n\t//#endregion\n}\n\nif (require.main !== module) {\n\t// Export the constructor in compact mode\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Lighteffects(options);\n} else {\n\t// otherwise start the instance directly\n\t(() => new Lighteffects())();\n}\n"],
  "mappings": "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",
  "names": ["StopLightBy", "EffectTimeout"]
}
