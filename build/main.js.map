{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.1.0\n */\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport * as utils from \"@iobroker/adapter-core\";\nimport { GlobalHelper } from \"./modules/global-helper\";\n\nlet Helper: GlobalHelper;\n\ninterface Light {\n\tname: string;\n\tenabled: boolean;\n\tstate: string;\n\tbrightness: string;\n\tcolor: string;\n\ttransition: string;\n\teffect: string;\n\tdisabling: string;\n\tverified: boolean;\n\tactive: boolean;\n\tcurrentstate: boolean | null;\n\tcurrentbrightness: number | null;\n\tcurrentcolor: string | null;\n\tcurrenttransition: number | null;\n}\n\nlet Lights: Light[];\n\nclass Lighteffects extends utils.Adapter {\n\t//#region Constructor\n\tpublic constructor(options: Partial<utils.AdapterOptions> = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\tname: \"lighteffects\",\n\t\t});\n\t\tthis.on(\"ready\", this.onReady.bind(this));\n\t\tthis.on(\"stateChange\", this.onStateChange.bind(this));\n\t\tthis.on(\"unload\", this.onUnload.bind(this));\n\t}\n\t//#endregion\n\n\t//#region Base Functions of Adapter\n\t//#region onReady\n\tprivate async onReady(): Promise<void> {\n\t\t// Init Helper\n\t\tHelper = new GlobalHelper(this);\n\t\t// Adapter starting\n\t\tHelper.ReportingInfo(\"Info\", \"Adapter\", \"Adapter starting\");\n\t\tHelper.ReportingInfo(\"Debug\", \"Adapter\", \"Current config: \" + JSON.stringify(this.config));\n\t\tLights = [];\n\t\t//#region Check config, create and cleanup states\n\t\t// Get existing states\n\t\tconst oExistingObjects = await this.getAdapterObjectsAsync();\n\t\tHelper.ReportingInfo(\"Debug\", \"Adapter\", \"Existing objects: \" + JSON.stringify(oExistingObjects));\n\t\tif (this.config.lights.length > 0) {\n\t\t\tfor (const cLight of this.config.lights) {\n\t\t\t\t// Creating internal object from config\n\t\t\t\tLights.push({\n\t\t\t\t\tname: cLight.name,\n\t\t\t\t\tenabled: cLight.enabled,\n\t\t\t\t\tstate: cLight.state,\n\t\t\t\t\tbrightness: cLight.brightness,\n\t\t\t\t\tcolor: cLight.color,\n\t\t\t\t\ttransition: cLight.transition,\n\t\t\t\t\teffect: cLight.effect,\n\t\t\t\t\tdisabling: cLight.disabling,\n\t\t\t\t\tverified: false,\n\t\t\t\t\tactive: false,\n\t\t\t\t\tcurrentstate: null,\n\t\t\t\t\tcurrentbrightness: null,\n\t\t\t\t\tcurrentcolor: null,\n\t\t\t\t\tcurrenttransition: null,\n\t\t\t\t});\n\n\t\t\t\t//#region Verify config element\n\t\t\t\tif (cLight.name === \"\" || cLight.name === null) {\n\t\t\t\t\tHelper.ReportingInfo(\"Warn\", \"Adapter\", \"Config contains light without name\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (cLight.state === \"\" || cLight.state === null) {\n\t\t\t\t\tHelper.ReportingInfo(\"Warn\", \"Adapter\", `Config light ${cLight.name} has no object for state`);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tif ((await this.getForeignObjectAsync(cLight.state)) === null) {\n\t\t\t\t\t\tHelper.ReportingInfo(\n\t\t\t\t\t\t\t\"Warn\",\n\t\t\t\t\t\t\t\"Adapter\",\n\t\t\t\t\t\t\t`Config light ${cLight.name} has not existing object for state`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (cLight.brightness === \"\" || cLight.brightness === null) {\n\t\t\t\t\tHelper.ReportingInfo(\"Warn\", \"Adapter\", `Config light ${cLight.name} has no object for brightness`);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tif ((await this.getForeignObjectAsync(cLight.brightness)) === null) {\n\t\t\t\t\t\tHelper.ReportingInfo(\n\t\t\t\t\t\t\t\"Warn\",\n\t\t\t\t\t\t\t\"Adapter\",\n\t\t\t\t\t\t\t`Config light ${cLight.name} has not existing object for brightness`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (cLight.color === \"\" || cLight.color === null) {\n\t\t\t\t\tHelper.ReportingInfo(\"Warn\", \"Adapter\", `Config light ${cLight.name} has no object for color`);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tif ((await this.getForeignObjectAsync(cLight.color)) === null) {\n\t\t\t\t\t\tHelper.ReportingInfo(\n\t\t\t\t\t\t\t\"Warn\",\n\t\t\t\t\t\t\t\"Adapter\",\n\t\t\t\t\t\t\t`Config light ${cLight.name} has not existing object for color`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (cLight.transition === \"\" || cLight.transition === null) {\n\t\t\t\t\tHelper.ReportingInfo(\"Warn\", \"Adapter\", `Config light ${cLight.name} has no object for transition`);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tif ((await this.getForeignObjectAsync(cLight.transition)) === null) {\n\t\t\t\t\t\tHelper.ReportingInfo(\n\t\t\t\t\t\t\t\"Warn\",\n\t\t\t\t\t\t\t\"Adapter\",\n\t\t\t\t\t\t\t`Config light ${cLight.name} has not existing object for transition`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Setting verified of internal object\n\t\t\t\tLights[Lights.findIndex((obj) => obj.name === cLight.name)].verified = true;\n\t\t\t\t//#endregion\n\n\t\t\t\t//#region Creating objects when enabled\n\t\t\t\tif (cLight.enabled === true) {\n\t\t\t\t\t// Checking or createing device\n\t\t\t\t\tif (oExistingObjects[this.name + \".\" + this.instance + \".\" + cLight.name]) {\n\t\t\t\t\t\t// Already exists\n\t\t\t\t\t\tdelete oExistingObjects[this.name + \".\" + this.instance + \".\" + cLight.name];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Create device\n\t\t\t\t\t\tawait this.createDeviceAsync(cLight.name);\n\t\t\t\t\t}\n\t\t\t\t\t// Checking or createing effect\n\t\t\t\t\tif (oExistingObjects[this.name + \".\" + this.instance + \".\" + cLight.name + \".\" + \"effect\"]) {\n\t\t\t\t\t\t// Already exists\n\t\t\t\t\t\tdelete oExistingObjects[this.name + \".\" + this.instance + \".\" + cLight.name + \".\" + \"effect\"];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Create State\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(cLight.name + \".\" + \"effect\", {\n\t\t\t\t\t\t\ttype: \"state\",\n\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\tname: \"effect\",\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\trole: \"state\",\n\t\t\t\t\t\t\t\tstates: {\n\t\t\t\t\t\t\t\t\tcolor: \"color\",\n\t\t\t\t\t\t\t\t\tcandle: \"candle\",\n\t\t\t\t\t\t\t\t\tnotifyAlarm: \"notifyAlarm\",\n\t\t\t\t\t\t\t\t\tnotifyWarn: \"notifyWarn\",\n\t\t\t\t\t\t\t\t\tnotifyInfo: \"notifyInfo\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tread: true,\n\t\t\t\t\t\t\t\twrite: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t// Checking or createing state\n\t\t\t\t\tif (oExistingObjects[this.name + \".\" + this.instance + \".\" + cLight.name + \".\" + \"state\"]) {\n\t\t\t\t\t\t// Already exists\n\t\t\t\t\t\tdelete oExistingObjects[this.name + \".\" + this.instance + \".\" + cLight.name + \".\" + \"state\"];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Create State\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(cLight.name + \".\" + \"state\", {\n\t\t\t\t\t\t\ttype: \"state\",\n\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\tname: \"state\",\n\t\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\t\trole: \"state\",\n\t\t\t\t\t\t\t\tread: true,\n\t\t\t\t\t\t\t\twrite: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//#endregion\n\n\t\t\t\t//#region Cleanup state and subscribe object\n\t\t\t\tawait this.setStateAsync(cLight.name + \".\" + \"state\", false);\n\t\t\t\tawait this.setStateAsync(cLight.name + \".\" + \"effect\", cLight.effect);\n\t\t\t\tthis.subscribeStates(cLight.name + \".\" + \"state\");\n\t\t\t\tthis.subscribeStates(cLight.name + \".\" + \"effect\");\n\t\t\t\t//#endregion\n\t\t\t}\n\n\t\t\tHelper.ReportingInfo(\"Debug\", \"Adapter\", `Internal Lights object: ${JSON.stringify(Lights)}`);\n\n\t\t\t//#region Cleaning up reminding objects\n\t\t\tHelper.ReportingInfo(\"Debug\", \"Adapter\", `Objects to cleanup: ${JSON.stringify(oExistingObjects)}`);\n\t\t\tObject.entries(oExistingObjects).map(([key, _value]) => {\n\t\t\t\tHelper.ReportingInfo(\"Debug\", \"Adapter\", `Deleting unneeded object ${key}`);\n\t\t\t\tthis.delForeignObjectAsync(key);\n\t\t\t});\n\t\t\t//#endregion\n\t\t}\n\t\t//#endregion\n\t}\n\t//#endregion\n\n\t//#region onUnload\n\tprivate onUnload(callback: () => void): void {\n\t\ttry {\n\t\t\tcallback();\n\t\t} catch (e) {\n\t\t\tcallback();\n\t\t}\n\t}\n\t//#endregion\n\n\t//#region onStateChange\n\tprivate onStateChange(id: string, state: ioBroker.State | null | undefined): void {\n\t\tif (state) {\n\t\t\tHelper.ReportingInfo(\"Debug\", \"Adapter\", `state ${id} changed: ${state.val} (ack = ${state.ack})`);\n\t\t\t// Get Name of Config Light\n\t\t\tconst LightName = id.split(\".\")[2];\n\t\t\t// Get object name for light\n\t\t\tconst ChangedProperty = id.split(\".\")[3];\n\t\t\t// Get internal light object\n\t\t\tconst CurrLight = Lights[Lights.findIndex((obj) => obj.name === LightName)];\n\t\t\tif (ChangedProperty === \"effect\") {\n\t\t\t\tCurrLight.effect === state.val;\n\t\t\t\tif (CurrLight.active === true) {\n\t\t\t\t\t// CHANGE EFFECT\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (ChangedProperty === \"state\") {\n\t\t\t\t// Enable effect\n\t\t\t\tif (state.val === true) {\n\t\t\t\t\tswitch (CurrLight.effect) {\n\t\t\t\t\t\tcase \"notifyAlarm\":\n\t\t\t\t\t\t\tthis.effectNotify(CurrLight, \"red\");\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"notifyInfo\":\n\t\t\t\t\t\t\tthis.effectNotify(CurrLight, \"blue\");\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"notifyWarn\":\n\t\t\t\t\t\t\tthis.effectNotify(CurrLight, \"orange\");\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tCurrLight.active = false;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tHelper.ReportingInfo(\"Debug\", \"Adapter\", `state ${id} deleted`);\n\t\t\t// Deleted states by user ? Restart adapter ?\n\t\t}\n\t}\n\t//#endregion\n\t//#endregion\n\n\t//#region Effect Functions\n\n\t//#region Effect Alarm\n\t// Simple effect: Set color, switch brightness from 1 to 100 three times, handle poweroff behaviour\n\tprivate async effectNotify(Light: Light, Color: string): Promise<void> {\n\t\tHelper.ReportingInfo(\"Info\", \"effectAlarm\", `Effect alarm for ${Light.name}`);\n\t\tLight.active = true;\n\t\tawait this.saveCurrentValues(Light);\n\t\t// Set transition time to 0\n\t\tawait this.setForeignStateAsync(Light.transition, 0);\n\t\t// Set color to red\n\t\tawait this.setForeignStateAsync(Light.color, Color);\n\t\t// Power on\n\t\tawait this.setForeignStateAsync(Light.state, true);\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t// Set brightness to 100%\n\t\t\tawait this.setForeignStateAsync(Light.brightness, 100);\n\t\t\t// Sleep 1s\n\t\t\tawait new Promise((f) => setTimeout(f, 1000));\n\t\t\t// Set brightness to 1%\n\t\t\tawait this.setForeignStateAsync(Light.brightness, 1);\n\t\t\t// Sleep 1s\n\t\t\tawait new Promise((f) => setTimeout(f, 1000));\n\t\t}\n\t\tswitch (Light.disabling) {\n\t\t\tcase \"Reset\": {\n\t\t\t\tawait this.restoreCurrentValues(Light);\n\t\t\t}\n\t\t\tcase \"PowerOffRestore\": {\n\t\t\t\tawait this.restoreCurrentValues(Light);\n\t\t\t\tawait this.setForeignStateAsync(Light.state, false);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tawait this.setForeignStateAsync(Light.state, false);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tLight.active = false;\n\t\tawait this.setStateAsync(Light.name + \".\" + \"state\", false);\n\t}\n\t//#endregion\n\n\t//#region saveCurrentValues\n\t// Save current settings of light\n\tprivate async saveCurrentValues(Light: Light): Promise<void> {\n\t\tHelper.ReportingInfo(\"Debug\", \"saveCurrentValues\", `Save current values for ${Light.name}`);\n\t\t// Save state\n\t\tconst CurrState = await this.getForeignStateAsync(Light.state);\n\t\tif (CurrState!.val === true) {\n\t\t\tLight.currentstate = true;\n\t\t} else {\n\t\t\tLight.currentstate = false;\n\t\t}\n\t\t// Save brightness\n\t\tconst CurrBrightness = await this.getForeignStateAsync(Light.brightness);\n\t\tif (\n\t\t\tCurrBrightness!.val !== null &&\n\t\t\tCurrBrightness!.val !== \"undefined\" &&\n\t\t\ttypeof CurrBrightness!.val === \"number\" &&\n\t\t\tCurrBrightness!.val >= 0\n\t\t) {\n\t\t\tLight.currentbrightness = CurrBrightness!.val;\n\t\t} else {\n\t\t\tLight.currentbrightness = 100;\n\t\t}\n\t\t// Save color\n\t\tconst CurrColor = await this.getForeignStateAsync(Light.color);\n\t\tif (CurrColor!.val !== null && CurrColor!.val !== \"undefined\" && typeof CurrColor!.val === \"string\") {\n\t\t\tLight.currentcolor = CurrColor!.val;\n\t\t} else {\n\t\t\tLight.currentcolor = \"white\";\n\t\t}\n\t\t// Save transition time\n\t\tconst CurrTransition = await this.getForeignStateAsync(Light.transition);\n\t\tif (\n\t\t\tCurrTransition!.val !== null &&\n\t\t\tCurrTransition!.val !== \"undefined\" &&\n\t\t\ttypeof CurrTransition!.val === \"number\" &&\n\t\t\tCurrTransition!.val >= 0\n\t\t) {\n\t\t\tLight.currenttransition = CurrTransition!.val;\n\t\t} else {\n\t\t\tLight.currenttransition = 0;\n\t\t}\n\t}\n\t//#endregion\n\n\t//#region restoreCurrentValues\n\t// Save current settings of light\n\tprivate async restoreCurrentValues(Light: Light): Promise<void> {\n\t\tHelper.ReportingInfo(\n\t\t\t\"Debug\",\n\t\t\t\"restoreCurrentValues\",\n\t\t\t`Restore current values for ${Light.name} to brightness ${Light.currentbrightness}, color ${Light.currentcolor}, Transition ${Light.currenttransition}, State ${Light.currentstate}`,\n\t\t);\n\t\tawait this.setForeignStateAsync(Light.brightness, Light.currentbrightness);\n\t\tawait this.setForeignStateAsync(Light.state, Light.currentstate);\n\t\tawait this.setForeignStateAsync(Light.color, Light.currentcolor);\n\t\tawait this.setForeignStateAsync(Light.transition, Light.currenttransition);\n\t}\n\t//#endregion\n\n\t//#endregion\n}\n\nif (require.main !== module) {\n\t// Export the constructor in compact mode\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Lighteffects(options);\n} else {\n\t// otherwise start the instance directly\n\t(() => new Lighteffects())();\n}\n"],
  "mappings": "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",
  "names": []
}
