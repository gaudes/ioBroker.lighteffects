{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.1.0\n */\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport * as utils from \"@iobroker/adapter-core\";\n\n// Load your modules here, e.g.:\n// import * as fs from \"fs\";\n\nclass Lighteffects extends utils.Adapter {\n\tpublic constructor(options: Partial<utils.AdapterOptions> = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\tname: \"lighteffects\",\n\t\t});\n\t\tthis.on(\"ready\", this.onReady.bind(this));\n\t\tthis.on(\"stateChange\", this.onStateChange.bind(this));\n\t\t// this.on(\"objectChange\", this.onObjectChange.bind(this));\n\t\t// this.on(\"message\", this.onMessage.bind(this));\n\t\tthis.on(\"unload\", this.onUnload.bind(this));\n\t}\n\n\t/**\n\t * Is called when databases are connected and adapter received configuration.\n\t */\n\tprivate async onReady(): Promise<void> {\n\t\t// Adapter starting\n\t\tthis.log.info(\"Adapter starting\");\n\t\tthis.log.debug(\"Current config: \" + JSON.stringify(this.config));\n\n\t\t//#region Check config, create and cleanup states\n\t\t// Get existing states\n\t\tconst oExistingObjects = await this.getAdapterObjectsAsync();\n\t\tthis.log.silly(\"Existing objects: \" + JSON.stringify(oExistingObjects));\n\t\tif (this.config.lights.length > 0) {\n\t\t\tfor (const cLight of this.config.lights) {\n\t\t\t\t//#region Verify config element\n\t\t\t\tif (cLight.name === \"\" || cLight.name === null) {\n\t\t\t\t\tthis.log.warn(\"Config contains light without name\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (cLight.state === \"\" || cLight.state === null) {\n\t\t\t\t\tthis.log.warn(`Config light ${cLight.name} has no object for state`);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tif ((await this.getForeignObjectAsync(cLight.state)) === null) {\n\t\t\t\t\t\tthis.log.warn(`Config light ${cLight.name} has not existing object for state`);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (cLight.brightness === \"\" || cLight.brightness === null) {\n\t\t\t\t\tthis.log.warn(`Config light ${cLight.name} has no object for brightness`);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tif ((await this.getForeignObjectAsync(cLight.brightness)) === null) {\n\t\t\t\t\t\tthis.log.warn(`Config light ${cLight.name} has not existing object for brightness`);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (cLight.color === \"\" || cLight.color === null) {\n\t\t\t\t\tthis.log.warn(`Config light ${cLight.name} has no object for color`);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tif ((await this.getForeignObjectAsync(cLight.color)) === null) {\n\t\t\t\t\t\tthis.log.warn(`Config light ${cLight.name} has not existing object for color`);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (cLight.transition === \"\" || cLight.transition === null) {\n\t\t\t\t\tthis.log.warn(`Config light ${cLight.name} has no object for transition`);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tif ((await this.getForeignObjectAsync(cLight.transition)) === null) {\n\t\t\t\t\t\tthis.log.warn(`Config light ${cLight.name} has not existing object for transition`);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//#endregion\n\n\t\t\t\t//#region Creating objects when enabled\n\t\t\t\tif (cLight.enabled === true) {\n\t\t\t\t\t// Checking or createing device\n\t\t\t\t\tif (oExistingObjects[this.name + \".\" + this.instance + \".\" + cLight.name]) {\n\t\t\t\t\t\t// Already exists\n\t\t\t\t\t\tdelete oExistingObjects[this.name + \".\" + this.instance + \".\" + cLight.name];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Create device\n\t\t\t\t\t\tawait this.createDeviceAsync(cLight.name);\n\t\t\t\t\t}\n\t\t\t\t\t// Checking or createing effect\n\t\t\t\t\tif (oExistingObjects[this.name + \".\" + this.instance + \".\" + cLight.name + \".\" + \"effect\"]) {\n\t\t\t\t\t\t// Already exists\n\t\t\t\t\t\tdelete oExistingObjects[this.name + \".\" + this.instance + \".\" + cLight.name + \".\" + \"effect\"];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Create State\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(cLight.name + \".\" + \"effect\", {\n\t\t\t\t\t\t\ttype: \"state\",\n\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\tname: \"effect\",\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\trole: \"state\",\n\t\t\t\t\t\t\t\tstates: { color: \"color\", candle: \"candle\" },\n\t\t\t\t\t\t\t\tread: true,\n\t\t\t\t\t\t\t\twrite: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.setStateAsync(cLight.name + \".\" + \"effect\", cLight.effect);\n\t\t\t\t\t}\n\t\t\t\t\t// Checking or createing state\n\t\t\t\t\tif (oExistingObjects[this.name + \".\" + this.instance + \".\" + cLight.name + \".\" + \"state\"]) {\n\t\t\t\t\t\t// Already exists\n\t\t\t\t\t\tdelete oExistingObjects[this.name + \".\" + this.instance + \".\" + cLight.name + \".\" + \"state\"];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Create State\n\t\t\t\t\t\tawait this.setObjectNotExistsAsync(cLight.name + \".\" + \"state\", {\n\t\t\t\t\t\t\ttype: \"state\",\n\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\tname: \"state\",\n\t\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\t\trole: \"state\",\n\t\t\t\t\t\t\t\tread: true,\n\t\t\t\t\t\t\t\twrite: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tnative: {},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//#endregion\n\n\t\t\t\t//#region Cleanup state and subscribe object\n\t\t\t\tawait this.setStateAsync(cLight.name + \".\" + \"state\", false);\n\t\t\t\tthis.subscribeStates(cLight.name + \".\" + \"state\");\n\t\t\t\tthis.subscribeStates(cLight.name + \".\" + \"effect\");\n\t\t\t\t//#endregion\n\t\t\t}\n\n\t\t\t//#region Cleaning up reminding objects\n\t\t\tthis.log.debug(`REST: ${JSON.stringify(oExistingObjects)}`);\n\t\t\t//#endregion\n\t\t}\n\t\t//#endregion\n\t}\n\n\t/**\n\t * Is called when adapter shuts down - callback has to be called under any circumstances!\n\t */\n\tprivate onUnload(callback: () => void): void {\n\t\ttry {\n\t\t\tcallback();\n\t\t} catch (e) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t/**\n\t * Is called if a subscribed state changes\n\t */\n\tprivate onStateChange(id: string, state: ioBroker.State | null | undefined): void {\n\t\tif (state) {\n\t\t\t// The state was changed\n\t\t\tthis.log.info(`state ${id} changed: ${state.val} (ack = ${state.ack})`);\n\t\t} else {\n\t\t\t// The state was deleted\n\t\t\tthis.log.info(`state ${id} deleted`);\n\t\t}\n\t}\n}\n\nif (require.main !== module) {\n\t// Export the constructor in compact mode\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Lighteffects(options);\n} else {\n\t// otherwise start the instance directly\n\t(() => new Lighteffects())();\n}\n"],
  "mappings": "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",
  "names": []
}
